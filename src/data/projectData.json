[
  {
    "id": 1,
    "title": "Performance Framework Development",
    "content": "Built a performance testing framework using JMeter supporting hybrid modular and data-driven approaches. Mapped controller logic and scripts for post/pre-processing to simulate 300+ concurrent users. Designed to support stress, load, and soak testing aligned with production benchmarks.",
    "role": "DevOps Performance Engineer",
    "technology": "JMeter, Python"
  },
  {
    "id": 2,
    "title": "Automated Performance Runner Script",
    "content": "Developed a Python script to orchestrate JMeter runs with dynamic user loads. Enabled intelligent re-runs on failure, logged execution results, and grouped outcomes by load profiles. Reduced manual intervention and standardized performance benchmarking.",
    "role": "Developer",
    "technology": "Python, JMeter"
  },
  {
    "id": 3,
    "title": "CI Pipeline for Coverage Reporting",
    "content": "Engineered a CI job to analyze and group coverage reports by team using RSpec data. Integrated with Jenkins and AWS S3 to assign failures to specific developers. Improved code quality visibility across squads and reduced CI triage time.",
    "role": "DevOps Engineer",
    "technology": "Ruby, Jenkins, AWS S3, Shell"
  },
  {
    "id": 4,
    "title": "Secure Medical DB Integration Testing",
    "content": "Tested clinical alerts from secured medical databases (FDB). Validated severity levels, drug interactions, and physician-facing alerts. Earned recognition for deep domain insights.",
    "role": "Tester",
    "technology": "C#, JavaScript"
  },
  {
    "id": 5,
    "title": "EHR Oncology Workflow Testing",
    "content": "Led QA for complex oncology medication workflows in an EHR system. Detected timezone bugs and critical patient-safety issues during regression.",
    "role": "Tester",
    "technology": "C#, JavaScript"
  },
  {
    "id": 6,
    "title": "Root Cause Analysis Report Automation",
    "content": "Developed a pipeline and script set to aggregate failure data from 60+ Jenkins jobs. Automated RCA sheet generation via Google Sheets for faster defect triage and regression trend analysis.",
    "role": "Developer",
    "technology": "Ruby, Groovy, Jenkins, AWS S3"
  },
  {
    "id": 7,
    "title": "Intake CI Automation System",
    "content": "Built a system that aggregated CI check statuses (migration, image, PR) into tasks and PRs. Improved release transparency and significantly reduced deployment delays.",
    "role": "Developer",
    "technology": "Ruby, Jenkins, GitHub Actions, AWS S3"
  },
  {
    "id": 8,
    "title": "Secure Deployment Guardrails",
    "content": "Integrated validation layers within the deployment pipeline to prevent unauthorized changes or accidental SQL/data pushes. Enforced rule-based approval and security hygiene.",
    "role": "DevOps Engineer",
    "technology": "Ruby on Rails, GitHub"
  },
  {
    "id": 9,
    "title": "Unit Test Run Optimization",
    "content": "Optimized unit test pipelines using Docker and parallel job execution. Reduced test execution time from 70 to 40 minutes while maintaining test integrity and traceability.",
    "role": "DevOps Engineer",
    "technology": "Docker, Jenkins, Shell Script"
  },
  {
    "id": 10,
    "title": "CI-Compliant Pull Request Title Validator",
    "content": "Implemented a GitHub Actions workflow to enforce standardized PR titles across repositories. Automatically flags PRs with incorrect formatting, improving code hygiene and reviewer efficiency.",
    "role": "Developer",
    "technology": "JavaScript, GitHub Actions"
  },
  {
    "id": 11,
    "title": "Job Boards Integration Testing Automation",
    "content": "Automated job publication flows to external job boards using RSpec and Selenium. Validated end-to-end workflows including republish, pause, and sponsor actions. Helped stabilize release testing cycles.",
    "role": "Automation Developer",
    "technology": "Ruby, RSpec, Selenium, Ember.js"
  },
  {
    "id": 12,
    "title": "Chrome Response Redirector Plugin",
    "content": "Created a Chrome extension and clipboard manager to capture POST request payloads for JMeter test parameterization. Reduced test data prep time and improved test reliability.",
    "role": "Developer",
    "technology": "JavaScript, Python"
  },
  {
    "id": 13,
    "title": "IC-EHR Navigation Documenter",
    "content": "Created a navigation tracker tool to map workflows in EHR systems, reducing onboarding time for QA and Dev teams. Integrated search and export functions for reuse.",
    "role": "Developer & Tester",
    "technology": "C#, ASP.NET MVC, Entity Framework, SQL Server"
  },
  {
    "id": 14,
    "title": "Chrome Memory Usage Tracker",
    "content": "Engineered a lightweight system tray app to monitor Chrome tab memory consumption. Triggered toaster alerts when memory thresholds were crossed during automation runs.",
    "role": "Product Owner & Developer",
    "technology": "C#"
  },
  {
    "id": 15,
    "title": "Automation Master Runner (Windows Service)",
    "content": "Built a background Windows service that triggers scheduled automation runs via DB-controlled flags. Aggregated pass/fail results, reran flaky cases, and emailed run summaries to stakeholders.",
    "role": "Developer",
    "technology": "C#, SQL Server, Windows Services"
  },
  {
    "id": 16,
    "title": "Project Redemption \u2013 Stability Engineering",
    "content": "Restructured flaky test cases and introduced automation standards across modules. Increased test pass rates from 35% to 90% over 9 months by fixing core framework and flaky job issues.",
    "role": "Automation Developer",
    "technology": "Ruby, RSpec, Selenium"
  },
  {
    "id": 17,
    "title": "Deployment Process Improvement",
    "content": "Integrated deployment processes into internal control tools to enforce approval checks before environment pushes. Reduced risks of unauthorized DB access and enabled rollback safety.",
    "role": "DevOps Engineer",
    "technology": "Ruby on Rails, GitHub"
  },
  {
    "id": 18,
    "title": "Auditing for Compliance and DR Readiness",
    "content": "Led product-level audit covering DR planning, IAM restrictions, and architecture documentation. Worked with leadership to gather and validate configurations for compliance submissions.",
    "role": "SRE & Compliance Auditor",
    "technology": "AWS, IAM, Architecture Tools"
  },
  {
    "id": 19,
    "title": "Automated RCA Report Analyzer",
    "content": "Developed tools to parse failure logs across 60+ jobs and aggregate into Google Sheets. Enabled faster triage and RCA documentation for defect tracking and regression impact.",
    "role": "DevOps Engineer",
    "technology": "Ruby, Groovy, AWS S3"
  },
  {
    "id": 20,
    "title": "Automated OKR Report Generator",
    "content": "Built a CI tool to extract and visualize squad-level OKRs from automation and unit test data. Provided leadership with SLA and coverage reports via bar charts and trendlines.",
    "role": "Developer",
    "technology": "Python, Jenkins, Docker, Groovy"
  },
  {
    "id": 21,
    "title": "Intake Bot",
    "content": "Developed a bot that analyses multiple CI checks related to the intake PR, and shown the failures in the ticket directly. This reduced the time spent on triaging CI failures and improved QA and developer productivity.",
    "role": "DevOps Engineer and Lead",
    "technology": "Ruby, GitHub Actions, Jenkins, Freshrelease, Groovy"
  },
  {
    "id": 22,
    "title": "Automerge Bot",
    "content": "Created a bot that automatically merges PRs when intake bot reports that all the CI checks have passed and the related ticket has all the required information. This reduced the time spent on manual merges and improved the overall efficiency of the development process.",
    "role": "DevOps Engineer and Lead",
    "technology": "Ruby, GitHub Actions, Jenkins, Groovy, AWS S3, Google Sheets, Freshrelease"
  },
  {
    "id": 23,
    "title": "69 Tree Dependency Matrix Generator",
    "content": "Built a system to dynamically compute test dependencies for code changes across jobs, modules, and stacks. Reduced redundant test runs and enabled one-click branch generation for targeted runs.",
    "role": "DevOps Automation Lead",
    "technology": "Ruby, Freshrelease, GitHub"
  },
  {
    "id": 24,
    "title": "Automated Regression Environment Framework",
    "content": "Designed an end-to-end regression environment automation framework using Jenkins, AWS, and Kubernetes. Supported 20,000+ test cases, 3,000+ dynamic accounts, and 8 platforms. Enabled one-click environment cloning, slashing setup time from weeks to hours.",
    "role": "Lead DevOps Architect",
    "technology": "Jenkins, Groovy, Ruby, AWS, Kubernetes, Docker"
  },
  {
    "id": 25,
    "title": "Deployment Watcher",
    "content": "Built a Python-based deployment monitor for 7+ microservices across multiple regions. Enabled live deployment visibility, error detection, manual step automation, and Slack notifications. Streamlined DevOps flow and improved incident response.",
    "role": "DevOps Engineer",
    "technology": "Python, Slack API"
  }
]